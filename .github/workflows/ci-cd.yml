name: Selective Build & Push Docker Images

on:
  push:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-services: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changed services
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            api-gateway:
              - 'api-gateway/**'
              - 'pom.xml'
            workout-service:
              - 'workout-service/**'
              - 'pom.xml'
            user-service:
              - 'user-service/**'
              - 'pom.xml'
            auth-service:
              - 'auth-service/**'
              - 'pom.xml'
            notification-service:
              - 'notification-service/**'
              - 'pom.xml'

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ 'api-gateway', 'workout-service', 'user-service', 'auth-service', 'notification-service' ]
      fail-fast: false
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: contains(fromJSON(needs.detect-changes.outputs.changed-services), matrix.service)
        run: |
          docker build -f ${{ matrix.service }}/Dockerfile -t $DOCKER_USER/${{ matrix.service }}:latest .
          docker push $DOCKER_USER/${{ matrix.service }}:latest
        continue-on-error: false
