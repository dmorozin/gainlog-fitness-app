version: '3.8'

services:
  workout-db:
    image: postgres:latest
    container_name: workout-db
    environment:
      POSTGRES_DB: ${WORKOUT_POSTGRES_DB}
      POSTGRES_USER: ${WORKOUT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${WORKOUT_POSTGRES_PASSWORD}
    ports:
      - "5001:5432"
    volumes:
      - workout-db-data:/var/lib/postgresql/data
    networks:
      - gainlog-network

  user-db:
    image: postgres:latest
    container_name: user-db
    environment:
      POSTGRES_DB: ${USER_POSTGRES_DB}
      POSTGRES_USER: ${USER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${USER_POSTGRES_PASSWORD}
    ports:
      - "5002:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - gainlog-network

  workout-service:
    build:
      context: .
      dockerfile: workout-service/Dockerfile
    depends_on:
      - workout-db
    environment:
      SPRING_DATASOURCE_URL: ${WORKOUT_POSTGRES_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${WORKOUT_POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${WORKOUT_POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "${WORKOUT_SERVICE_PORT}:8081"
    networks:
      - gainlog-network

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    depends_on:
      - user-db
    environment:
      SPRING_DATASOURCE_URL: ${USER_POSTGRES_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${USER_POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${USER_POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "${USER_SERVICE_PORT}:8082"
      - "${USER_GRPC_SERVER_PORT}:9002"
    networks:
      - gainlog-network

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    environment:
      SECURITY_JWT_SECRET_KEY: ${AUTH_SECURITY_JWT_SECRET_KEY}
      SECURITY_JWT_EXPIRATION_TIME: ${AUTH_SECURITY_JWT_EXPIRATION_TIME}
      USER_SERVICE_ADDRESS: "user-service"
      USER_SERVICE_GRPC_PORT: "9002"
    ports:
      - "${AUTH_SERVICE_PORT}:8083"
    networks:
      - gainlog-network

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "${API_GATEWAY_PORT}:8080"
    depends_on:
      - workout-service
    networks:
      - gainlog-network

networks:
  gainlog-network:
    driver: bridge

volumes:
  workout-db-data:
  user-db-data:
